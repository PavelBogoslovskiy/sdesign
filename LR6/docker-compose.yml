version: "3.3"

services:
  db:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db_init.sql:/docker-entrypoint-initdb.d/db_init.sql
    ports:
      - "5432:5432"
  
  mongodb:
    image: mongo:5.0
    container_name: mongodb
    restart: on-failure
    volumes:
      - mongodbdata:/data/db
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    ports:
      - '27017:27017'
    environment:
      MONGO_URI: mongodb://mongodb:27017
  
  cache:
    container_name: cache
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
  
  kafka1:
    image: 'bitnami/kafka:latest'
    container_name: kafka1
    ports:
        - "9092:9092"
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka1:9092"
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_KRAFT_CLUSTER_ID: "dh6khitPSDGZSBOjNeTC_g"
    volumes:
      - kafka_volume1:/bitnami/kafka
    
  kafka2:
    image: 'bitnami/kafka:latest'
    container_name: kafka2
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka2:9092"
      KAFKA_BROKER_ID: 2
      KAFKA_CFG_NODE_ID: 2
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_KRAFT_CLUSTER_ID: "dh6khitPSDGZSBOjNeTC_g"
    volumes:
      - kafka_volume2:/bitnami/kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.4.0
    ports:
      - "8888:8080"
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9092"
      KAFKA_CLUSTERS_0_NAME: "kraft"


  app:
    build: .
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      MONGO_URI: mongodb://mongodb:27017
    depends_on:
      - db
      - mongodb
      - cache
      - kafka1
      - kafka2
    command: >
      bash -c "
      until pg_isready -h db -p 5432; do sleep 1; done;
      python create_and_insert_table.py &&
      python writer.py &
      python main.py &
      wait
      "
    ports:
      - "8000:8000"

volumes:
  postgres_data:
  mongodbdata:
  kafka_volume1:
  kafka_volume2:
  


